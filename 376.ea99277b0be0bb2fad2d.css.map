{"version":3,"file":"376.ea99277b0be0bb2fad2d.css","mappings":"AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;AAVA;AAKA;AACA;AAAA;AAFA;AAGA;AAAA;AAAA;AACA;;ACfA;AAEA;AACA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AAJA;AAPA;AAgBA;AACA;AANA;AAQA;AACA;AACA;AACA;AANA;AAhBA;AA2BA;AACA;AARA;AAUA;AACA;AACA;AACA;AARA;AAYA;AAEA;AACA;AAXA;AAaA;AACA;AACA;AACA;AAXA;AAGA;AAaA;AAbA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAAA;AADA;AACA;AAfA;AAmBA;AACA;AACA;AACA;AADA;AArBA;AA4BA;AACA;AACA;AACA;AACA;AAIA;AACA;AAPA;AASA;AACA;AAPA;AASA;AACA;AAAA;AANA;AAOA;AAAA;AAJA;AACA;AAOA;AACA;AACA;AALA;AAOA;AACA;AAAA;AAJA;AAKA;AAAA;AAFA;AACA;AAKA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AAFA;AAGA;AAAA;AAAA;AACA;AAjEA;AAuEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AA5EA;AAmFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAtFA;AA+FA;AACA;AACA;AANA;AAQA;AACA;AAAA;AALA;AAMA;AAAA;AAHA;AACA;AAMA;;;AACA;AAFA;AACA;;;AAKA;AADA;AAJA;;;AASA;AAAA;AAlHA;AAyHA;AACA;AACA;AACA;AACA;AAJA;AAzHA;AAgIA;AACA;AACA;AAJA;AAMA;;;;AACA;AADA;;ACtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AADA;AAEA;;;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AARA;AAWA;AACA;AACA;AAKA;AACA;AAJA;AADA;AAAA;AACA;AAIA;AACA;AApBA;AAsBA;AACA;AACA","sources":["webpack://szz.io/./src/components/Spinner.less","webpack://szz.io/./src/components/TransitionReplace.less","webpack://szz.io/./src/Header.less","webpack://szz.io/./vendor/roboto/roboto.css","webpack://szz.io/./src/app.less"],"sourcesContent":["@import 'src/components/base';\n\n.spinner {\n    @duration: 2s;\n    @width: 50vw;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: @width;\n    height: 2px;\n\n    opacity: 0.5;\n    background-color: @color-primary;\n\n    @keyframes spin {\n        0% { transform: translateX(-100%); }\n        100% { transform: translateX(100vw + @width); }\n    }\n\n    animation: spin @duration linear infinite;\n}\n\n","@import 'src/components/base';\n\n.transitionReplace {\n    .appear {\n        position: relative;\n        opacity: 0.001;\n\n        // Can't use transform, otherwise breaks nested fixed elems\n        top: -@spacing-y;\n\n        &.appearActive {\n            opacity: 1;\n            top: 0;\n            transition: all @duration-appear;\n        }\n    }\n\n    .enter {\n        opacity: 0.001;\n        transform: translateX(-100%);\n\n        &.enterActive {\n            opacity: 1;\n            transform: none;\n            transition: all @duration-enter;\n        }\n    }\n\n    .leave {\n        opacity: 1;\n        transform: none;\n\n        &.leaveActive {\n            opacity: 0.001;\n            transform: translateX(100%);\n            transition: all @duration-exit;\n        }\n    }\n\n    &.fromRight {\n        .enter {\n            opacity: 0.001;\n            transform: translateX(100%);\n\n            &.enterActive {\n                opacity: 1;\n                transform: none;\n                transition: all @duration-enter;\n            }\n        }\n\n        .leave.leaveActive {\n            transform: translateX(-100%);\n        }\n    }\n}\n\n","@import 'src/components/base';\n\n.header {\n    position: relative;\n    display: flex;\n    flex-flow: row wrap;\n    align-items: baseline;\n    margin: @spacing-y @spacing-x;\n    @height-header: @font-size * 2;\n    font-size: @height-header;\n    font-weight: lighter;\n\n    animation-duration: @duration-appear;\n    animation-fill-mode: both;\n    animation-name: headerFadeInDown;\n\n    @keyframes headerFadeInDown {\n        0% { opacity: 0; transform: translateY(-25%); }\n    }\n\n    .logo {\n        position: relative;\n        margin: 0 @spacing-x;\n        color: @color-text;\n        transition: color @duration-transition;\n\n        @duration-logo: 1.5 * @duration-appear;\n\n        .logoS {\n            @size-logo-s: @height-header * 0.55;\n            display: inline-block;\n            position: relative;\n            width: @size-logo-s;\n            height: @size-logo-s;\n            margin: 0 (-@size-logo-s * 0.1);\n\n\n            @offset-logo: 0.8 * @size-logo-s;\n            animation-fill-mode: both;\n            animation-duration: @duration-logo;\n\n            &:first-child {\n                animation-name: logoAnim1;\n\n                @keyframes logoAnim1 {\n                    50% { transform: rotate(720deg); }\n                    100% { transform: rotate(720deg); }\n                }\n            }\n\n            &:nth-child(2) {\n                transform: scaleX(-1);\n                animation-name: logoAnim2;\n\n                @keyframes logoAnim2 {\n                    0% { transform: translateX(-@offset-logo) rotate(0deg) scaleX(-1); }\n                    50% { transform: translateX(-@offset-logo) rotate(720deg) scaleX(-1); }\n                }\n            }\n\n            &:nth-child(3) {\n                transform: scaleX(-1);\n                animation-name: logoAnim3;\n\n                @keyframes logoAnim3 {\n                    0% { transform: translateX(-2 * @offset-logo) rotate(0deg) scaleX(-1); }\n                    50% { transform: translateX(-2 * @offset-logo) rotate(720deg) scaleX(-1); }\n                }\n            }\n\n            @stroke-width-logo: 2px;\n\n            .round {\n                position: absolute;\n                top: 0;\n                bottom: 0;\n                left: 0;\n                right: 0;\n                border: @stroke-width-logo solid;\n                border-color: @color-primary transparent;\n                border-radius: 50%;\n                transition: border-color @duration-transition;\n            }\n\n            .line {\n                position: absolute;\n                height: @stroke-width-logo;\n                width: 100%;\n                top: calc(~\"50%\" - (@stroke-width-logo / 2));\n                transform: rotate(45deg);\n                background-color: @color-primary;\n                border-radius: @stroke-width-logo / 2;\n                transition: background-color @duration-transition;\n            }\n        }\n\n        .logoText {\n            animation-fill-mode: both;\n            animation-duration: @duration-logo;\n            animation-name: logoAnimText;\n\n            @keyframes logoAnimText {\n                0% { opacity: 0 }\n                50% { opacity: 0 }\n            }\n        }\n\n        &:hover, &:active, &:focus {\n            color: @color-primary;\n\n            .logoS {\n                .round {\n                    border-color: @color-text transparent;\n                }\n\n                .line {\n                    background-color: @color-text;\n                }\n            }\n        }\n    }\n\n    > nav {\n        flex: 1;\n        display: flex;\n        flex-flow: row wrap;\n        min-width: 75%;\n        align-items: baseline;\n\n        > a {\n            margin: 0 @spacing-x;\n            color: @color-text;\n            transition: color @duration-transition;\n\n            &:hover, &:active, &.active, &:focus {\n                color: @color-text-active;\n            }\n        }\n    }\n}\n\n","@font-face {\n  font-family: 'Roboto Condensed';\n  font-style: normal;\n  font-weight: 300;\n  src: local('Roboto Condensed Light'), local('RobotoCondensed-Light'), url(RobotoCondensed-Light.ttf) format('truetype');\n}\n@font-face {\n  font-family: 'Roboto Condensed';\n  font-style: normal;\n  font-weight: 400;\n  src: local('Roboto Condensed'), local('RobotoCondensed-Regular'), url(RobotoCondensed-Regular.ttf) format('truetype');\n}\n@font-face {\n  font-family: 'Roboto Condensed';\n  font-style: normal;\n  font-weight: 700;\n  src: local('Roboto Condensed Bold'), local('RobotoCondensed-Bold'), url(RobotoCondensed-Bold.ttf) format('truetype');\n}\n","@import 'src/components/base';\n@import 'vendor/roboto/roboto.css';\n\na {\n    color: @color-primary;\n    text-decoration: none;\n    transition: color @duration-transition;\n    &:hover, &:active, &:focus {\n        color: @color-text;\n    }\n}\n\n:global(#app) {\n    font-family: 'Roboto Condensed', sans-serif;\n    font-size: @font-size;\n    line-height: @line-height;\n    min-height: 100vh;\n    display: flex;\n    justify-content: center;\n    overflow: hidden;\n    background-color: @color-bg;\n\n    .containers {\n        flex: 1;\n        display: flex;\n        max-width: 100%;\n        @media screen and (min-width: @width-container-max) {\n            max-width: @width-container-max;\n        }\n\n        flex-flow: column nowrap;\n        position: relative;\n\n        main {\n            margin: @spacing-y @spacing-x;\n            color: @color-text;\n        }\n    }\n}\n\n"],"names":[],"sourceRoot":""}